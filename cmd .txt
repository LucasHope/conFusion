GIT

=> git-scm.com
git --version
git config --global user.name "Name"
git config --global user.email <email@>
git config --list

==> in folder cmd
git init
git status
git add .
git commit -m "commitName"
git log --oneline

=> checkout from earlier commit
git checkout <commit number> index.html

=> reset changes since last commit
git reset HEAD index.html
git checkout -- index.html

=> online repository (github)
git remote add origin <URL>
git push -u origin master
git clone <URL>


NODE / NPM / Modules

=> nodejs.org
node -v
npm -v

=> new .gitignore-file (what to ignore)
node_modules

=> general modules / package.json devDependencies
npm install

=> installing a module and adding to package.json
npm install bootstrap@4.0.0-alpha.6 --save
npm install font-awesome --save

Bootstrap-social @ http://lipis.github.io/bootstrap-social/

=> lite-server, node-based development server live updating
npm install lite-server --save-dev
npm start   (development server start)

=> watching for Changes and Parallelshell - onchange & parallelshell
npm install --save-dev onchange parallelshell
json:   "watch:scss": "onchange 'css/*.scss' -- npm run scss",
        "watch:all": "parallelshell 'npm run watch:scss' 'npm run lite'"
npm start   (development server start)


DISTRIBUTION FOLDER

=> Cleaning up a Distribution Folder - rimraf
npm install --save-dev rimraf
json:   "clean": "rimraf dist",

=> Copying (fonts) - copyfiles
npm -g install copyfiles
json:   "copyfonts": "copyfiles -f node_modules/font-awesome/fonts/* dist/fonts",

=> Compressing and Minifying Images - imagemin-cli
npm -g install imagemin-cli
json:   "imagemin": "imagemin img/* -o dist/img",

=> ignore + module installing to json/project
.gitignore:     node_modules
                dist
npm install --save-dev usemin-cli cssmin uglifyjs htmlmin
json:   "usemin": "usemin contactus.html -d dist --htmlmin -o dist/contactus.html && usemin aboutus.html -d dist --htmlmin -o dist/aboutus.html && usemin index.html -d dist --htmlmin -o dist/index.html",
        "build": "npm run clean && npm run imagemin && npm run copyfonts && npm run usemin"

=> surround .html css links local inclusion code with 
<!-- build:css css/main.css -->
<link rel="stylesheet" href="">
<!-- endbuild -->

=> surround .html script local inclusion code with
<!-- build:js js/main.js -->
<script src=""></script>
<!-- endbuild -->


LESS / SASS

npm install -g less
lessc styles.less styles.css

npm install --save-dev node-sass
json:   "scss": "node-sass -o css/ css/"
npm run scss


GRUNT

=> Grunt CLI & Grund packages (CLI = Command Line Interface)
npm install -g grunt-cli
npm install grunt --save-dev

=> Grunt file w/ configuration
Gruntfile.js    (needs commands + scripts for modules to work!)

=> Grunt modules (SCSS to CSS, time statistics, including modules as need) + SCRIPTS!
npm install grunt-sass time-grunt jit-grunt --save-dev
=> (watch for changes to update css, live-refresh of page) + SCRIPTS!
npm install grunt-contrib-watch grunt-browser-sync --save-dev
=> Grunt copy files to dist and clean dist (contrib-copy & contrib-clean) + SCRIPTS!
npm install grunt-contrib-copy grunt-contrib-clean --save-dev
=> Grunt imagemin (contrib-imagemin) + SCRIPTS!
npm install grunt-contrib-imagemin --save-dev
=> Grunt concat, cssmin, uglify, filerev, usemin + SCRIPTS!
npm install grunt-contrib-concat grunt-contrib-cssmin grunt-contrib-uglify grunt-filerev grunt-usemin --save-dev

=> COLLATED CMD
npm install -g grunt grunt-cli
npm install grunt-sass time-grunt jit-grunt grunt-contrib-watch grunt-browser-sync grunt-contrib-copy grunt-contrib-clean grunt-contrib-imagemin grunt-contrib-concat grunt-contrib-cssmin grunt-contrib-uglify grunt-filerev grunt-usemin --save-dev

=> After all scripts to Gruntfile.js w/ configurations and registering tasks
grunt   (default)
grunt css   
grunt build


GULP

=> Gulp CLI and modules (sass, browser-sync)
npm install -g gulp-cli
npm install gulp-cli --save-dev
npm install gulp-sass  browser-sync --save-dev
=> gulpfile.js to folder

=> del, gulp requirement for font file copy and cleaning dist + SCRIPTS!
npm install del --save-dev
=> gulp imagemin
npm install gulp-imagemin --save-dev + SCRIPTS!
=> gulp other modules for dist
npm install gulp-uglify gulp-usemin gulp-rev gulp-clean-css gulp-flatmap gulp-htmlmin --save-dev + SCRIPTS!

=> COLLLATED CMD
npm install -g gulp gulp-cli
npm install gulp-cli gulp-sass browser-sync del gulp-imagemin gulp-uglify gulp-usemin gulp-rev gulp-clean-css gulp-flatmap gulp-htmlmin --save-dev

=> gulpfile.js: SCRIPTS, requirements and tasks; then commands:
gulp    (default)
gulp build

